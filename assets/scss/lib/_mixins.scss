@use 'sass:math';
@use 'sass:map';
@use './breakpoints.scss' as *;
@use './vars.scss' as *;

// Grid //
@mixin get-cols($cols, $property) {
  & {
    #{$property}: calc($cols * var(--col-width) + (($cols - 1) * var(--grid-gutter)));
  }
}

// Typography //
@mixin get-line-height($size) {
  @if $size =='p' or $size ==6 {
    & {
      line-height: calc(var(--text-#{$size}) * var(--line-height-base));
    }
  }

  // max line-height-multiplier = 1.4 at size 6, when size = 1, multiplier = 1,
  // var(--line-height-base) - 1 = scale
  // scale / size = additive
  // res = var(--line-height-base) - (var(--line-height-base) - 1 / #{$size})

  @else {
    & {
      line-height: calc(var(--text-#{$size}) * (var(--line-height-base) - ((var(--line-height-base) - 1) / #{$size})));
    }
  }
}

@function get-max-width($size) {
  @if $size =='p' or $size ==6 {
    @return var(--text-col-width);
  }

  @else {
    @return calc(var(--text-col-width) * (1 + (1 / #{$size})));
  }
}

@function use-line-height($size) {
  @return calc(var(--text-#{$size}) * var(--line-height-base));
}

@mixin font-weight($weight) {
  @if $weight ==light {
    & {
      font-family: var(--font-family);
      font-style: normal;
      font-weight: 400;
    }
  }

  @if $weight ==medium {
    & {
      font-family: var(--font-family);
      font-style: normal;
      font-weight: 600;
    }
  }

  @if $weight ==black {
    & {
      font-family: var(--font-family);
      font-style: normal;
      font-weight: 900;
    }
  }
}

@mixin align-to-baseline($size, $baselines, $lines-beneath) {
  // $base-line-height: calc(#{get-font-size(1)} * 1.4);
  // $baseline-shift: calc(calc(calc($baselines * (#{get-font-size(1)} * 1.4)) - 1cap) / 2);
  // $baseline-push: calc(calc($lines-beneath * (#{get-font-size(1)} * 1.4)) - $baseline-shift );

  // & {
  //   line-height: calc(#{$baselines} * #{$base-line-height});
  //   margin-bottom: $baseline-push;
  //   padding-top: $baseline-shift;
  // }
}

@mixin rounded {
  border-radius: 999px;
}

@mixin opaque {
  background: rgb(var(--bg-color));
  color: currentcolor;
}